swagger: '2.0'
info:
  description: pet store api, play around with swagger, source from https://www.baeldung.com/spring-boot-rest-client-swagger-codegen
  version: 1.0.0
  title: Swagger Petstore
  contact:
    email: nobody
host: "localhost:8088"
basePath: "/v1"
schemes:
- http
paths:
  "/pet":
    post:
      '405':
        description: Invalid input
      description: add a pet to store
      operationId: addPet
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: body
        required: true
        schema:
          "$ref": "#/definitions/Pet"
      responses:
        '200':
          description: OK
  "/pet/{petId}":
    get:
      description: Returns a single pet
      operationId: getPetById
      produces:
      - application/json
      parameters:
      - name: petId
        in: path
        required: true
        type: integer
        format: int32
      responses:
        '200':
          description: successful operation
          schema:
            "$ref": "#/definitions/Pet"
        '400':
          description: Invalid ID supplied
        '404':
          description: Pet not found
    delete:
      summary: Deletes a pet
      operationId: deletePet
      produces:
      - application/json
      parameters:
      - name: petId
        in: path
        required: true
        type: integer
        format: int32
      responses:
        '400':
          description: Invalid ID supplied
        '404':
          description: Pet not found
  "/store/inventory":
    get:
      tags:
      - store
      summary: Returns list of pets
      operationId: getInventory
      produces:
      - application/json
      parameters: []
      responses:
        '200':
          description: successful operation
          schema:
            type: object
definitions:
  Category:
    type: object
    properties:
      id:
        type: integer
        format: int64
      name:
        type: string
    xml:
      name: Category
  Tag:
    type: object
    properties:
      id:
        type: integer
        format: int64
      name:
        type: string
    xml:
      name: Tag
  Pet:
    type: object
    required:
    - name
    - photoUrls
    properties:
      id:
        type: integer
        format: int64
      category:
        "$ref": "#/definitions/Category"
      name:
        type: string
        example: doggie
      status:
        type: string
        description: pet status in the store
        enum:
        - available
        - obsolete
ApiResponse:
  type: object
  properties:
    code:
      type: integer
      format: int32
    type:
      type: string
    message:
      type: string
